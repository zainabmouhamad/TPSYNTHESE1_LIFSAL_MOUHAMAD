#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <sys/stat.h>
#include <stdlib.h>
#include <sys/wait.h>
#define BUFFER_SIZE 128

void display_prompt() {
    const char *prompt = "enseash % ";
    write(STDOUT_FILENO, prompt, strlen(prompt));
}

int main() {
    char buffer[BUFFER_SIZE];
    ssize_t bytes_read;
    pid_t pid;
    int status;
      display_prompt();// Display the shell prompt
      
    while (1) {
        bytes_read = read(STDIN_FILENO, buffer, BUFFER_SIZE - 1);// Read user  from standard input (terminal)
        if (bytes_read == 0) {  //  Detect (Ctrl+D)
            write(STDOUT_FILENO, "Bye bye...\n", 11);  // Print the goodbye message
            break;  // Exit the shell loop
        }
        if (bytes_read > 0) {// If input was successfully read
                  buffer[bytes_read - 1] = '\0';
            pid = fork();
            if (pid == 0) { //  the child process  
             execlp(buffer, buffer, NULL);// Replace the child process with the command typed
              exit(1);
            } else if (pid > 0) {//the parent process
               
             wait(&status);// Wait for the child process to finish executing
            }
        }
        }

    return 0;
}